{
    "license": "",
    "modelfile": "",
    "parameters": "",
    "template": "{{- if .Messages }}\n{{- if or .System .Tools }}<|im_start|>system\n{{- if .System }}\n{{ .System }}\n{{- end }}\n{{- if .Tools }}\n\n# Tools\n\nYou may call one or more functions to assist with the user query.\n\nYou are provided with function signatures within <tools></tools> XML tags:\n<tools>\n{{- range .Tools }}\n{\"type\": \"function\", \"function\": {{ .Function }}}\n{{- end }}\n</tools>\n\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\n<tool_call>\n{\"name\": <function-name>, \"arguments\": <args-json-object>}\n</tool_call>\n{{- end }}<|im_end|>\n{{ end }}\n{{- range $i, $_ := .Messages }}\n{{- $last := eq (len (slice $.Messages $i)) 1 -}}\n{{- if eq .Role \"user\" }}<|im_start|>user\n{{ .Content }}<|im_end|>\n{{ else if eq .Role \"assistant\" }}<|im_start|>assistant\n{{ if .Content }}{{ .Content }}\n{{- else if .ToolCalls }}<tool_call>\n{{ range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"arguments\": {{ .Function.Arguments }}}\n{{ end }}</tool_call>\n{{- end }}{{ if not $last }}<|im_end|>\n{{ end }}\n{{- else if eq .Role \"tool\" }}<|im_start|>user\n<tool_response>\n{{ .Content }}\n</tool_response><|im_end|>\n{{ end }}\n{{- if and (ne .Role \"assistant\") $last }}<|im_start|>assistant\n{{ end }}\n{{- end }}\n{{- else }}\n{{- if .System }}<|im_start|>system\n{{ .System }}<|im_end|>\n{{ end }}{{ if .Prompt }}<|im_start|>user\n{{ .Prompt }}<|im_end|>\n{{ end }}<|im_start|>assistant\n{{ end }}{{ .Response }}{{ if .Response }}<|im_end|>{{ end }}",
    "system": "You are a helpful assistant. You can help me by answering my questions. You can also ask me questions. Take a deep breath and work on my questions step-by-step.",
    "details": {
        "parent_model": "",
        "format": "gguf",
        "family": "qwen3",
        "families": [
            "qwen3"
        ],
        "parameter_size": "4.0B",
        "quantization_level": "Q4_K_M"
    },
    "model_info": {
        "general.architecture": "qwen3",
        "general.basename": "Qwen3",
        "general.file_type": 15,
        "general.parameter_count": 4022468096,
        "general.quantization_version": 2,
        "general.size_label": "4B",
        "general.type": "model",
        "qwen3.attention.head_count": 32,
        "qwen3.attention.head_count_kv": 8,
        "qwen3.attention.key_length": 128,
        "qwen3.attention.layer_norm_rms_epsilon": 0.000001,
        "qwen3.attention.value_length": 128,
        "qwen3.block_count": 36,
        "qwen3.context_length": 40960,
        "qwen3.embedding_length": 2560,
        "qwen3.feed_forward_length": 9728,
        "qwen3.rope.freq_base": 1000000,
        "tokenizer.ggml.add_bos_token": false,
        "tokenizer.ggml.bos_token_id": 151643,
        "tokenizer.ggml.eos_token_id": 151645,
        "tokenizer.ggml.merges": null,
        "tokenizer.ggml.model": "gpt2",
        "tokenizer.ggml.padding_token_id": 151643,
        "tokenizer.ggml.pre": "qwen2",
        "tokenizer.ggml.token_type": null,
        "tokenizer.ggml.tokens": null
    },
    "tensors": [],
    "capabilities": [
        "completion",
        "tools"
    ],
    "modified_at": "2025-05-23T06:42:03.926085656Z"
}